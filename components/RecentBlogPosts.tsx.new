"use client";
import { useEffect, useState } from "react";
import { motion } from "framer-motion";
import Image from "next/image";
import Link from "next/link";

interface Post {
  slug: string;
  metadata: {
    title: string;
    summary: string;
    publishedAt: string;
    tag?: string;
  };
  content: string;
}

// Helper to fetch posts from your API or utility
async function fetchPosts(): Promise<Post[]> {
  const { getPosts } = await import("@/app/utils/utils");
  return getPosts(["app", "blog", "posts"]);
}

function getImagePath(slug: string) {
  // Map of slug to image filename
  const imageMap: { [key: string]: string } = {
    'figma-plugins-productivity-2025': 'Figma Plugins Productivity 2025 Thumbnail.jpg',
    'vernacular-design': 'Vernacular Design Thumbnail.jpg',
    'ui-as-performance': 'UI as Performance Thumbnail.jpg',
    'typography-trends-ui-2025': 'Typography Trends UI 2025 Thumbnail.jpg',
    'through-the-glass,-dimly': 'Through the Glass, Dimly Thumbnail.jpg',
    'sustainable-ui-design-2025': 'Sustainable UI Design 2025 Thumbnail.jpg',
    'no-code-figma-design-2025': 'No-Code Figma Design 2025 Thumbnail.jpg',
    'motion-design-lottie-animations-2025': 'Motion Design Lottie Animations 2025 Thumbnail.jpg',
    'minimalism-ui-balance-2025': 'Minimalism UI Balance 2025 Thumbnail.jpg',
    'micro-interactions-ui': 'Micro-Interactions UI Thumbnail.jpg',
    'logos-as-modern-sigils': 'Logos as Modern Sigils Thumbnail.jpg',
    'inclusive-ux-accessibility-2025': 'Inclusive UX Accessibility 2025 Thumbnail.jpg',
    'hidden-geometry-of-design': 'Hidden Geometry of Design Thumbnail.jpg',
    'gen-z-ui-ux-design-2025': 'Gen Z UI UX Design 2025 Thumbnail.jpg',
    'gamification-ux-2025': 'Gamification UX 2025 Thumbnail.jpg',
    'future-proofing-voice-ux-2025': 'Future-Proofing Voice UX 2025 Thumbnail.jpg',
    'from-static-to-cinematic': 'From Static to Cinematic Thumbnail.jpg',
    'figma-vs-adobe-xd-rapid-prototyping-2025': 'Figma vs Adobe XD Rapid Prototyping 2025 Thumbnail.jpg',
    'figma-multiplayer-features-2025': 'Figma Multiplayer Features 2025 Thumbnail.jpg',
    'figma-ai-collab-design': 'Figma AI Collab Design Thumbnail.jpg',
    'ethical-design-user-privacy-2025': 'Ethical Design User Privacy 2025 Thumbnail.jpg',
    'designing-for-ghosts': 'Designing for Ghosts Thumbnail.jpg',
    'designing-as-remembering': 'Designing as Remembering Thumbnail.jpg',
    'dark-mode-ui-design-tips-2025': 'Dark Mode UI Design Tips 2025 Thumbnail.jpg',
    'cross-platform-ux-design': 'Cross-Platform UX Design Thumbnail.jpg',
    'chaos-in-design': 'Chaos in Design Thumbnail.jpg',
    'canvas-to-code': 'Canvas to Code Thumbnail.jpg',
    'ar-ux-immersive-user-journeys': 'AR UX Immersive User Journeys Thumbnail.jpg',
    'ai-driven-design-systems-2025': 'AI-Driven Design Systems 2025 Thumbnail.jpg',
    '3d-elements-ui-trends-2025': '3D Elements UI Trends 2025 Thumbnail.jpg'
  };

  return `/posts/${imageMap[slug] || 'Designing for Ghosts Thumbnail.jpg'}`;
}

export default function RecentBlogPosts() {
  const [posts, setPosts] = useState<Post[]>([]);

  useEffect(() => {
    fetchPosts().then((data) => setPosts(data.slice(0, 2)));
  }, []);

  return (
    <div className="flex flex-col md:flex-row md:items-center md:space-x-16">
      <div className="md:w-1/3 mb-8 md:mb-0 text-center md:text-left">
        <h2 className="text-4xl font-bold leading-tight">
          Latest from<br />the blog
        </h2>
      </div>
      <div className="md:w-2/3 flex flex-col md:flex-row gap-8 justify-center">
        {posts.map((post) => (
          <Link
            href={`/blog/${post.slug}`}
            key={post.slug}
            className="bg-transparent rounded-lg flex-1 group"
          >
            <div className="relative h-48 w-full mb-4 rounded-lg overflow-hidden">
              <Image
                src={getImagePath(post.slug)}
                alt={post.metadata.title}
                fill
                className="object-cover group-hover:scale-105 transition-transform duration-300"
                onError={(e) => {
                  const target = e.target as HTMLImageElement;
                  target.src = "/posts/Designing for Ghosts Thumbnail.jpg";
                }}
              />
            </div>
            <h3 className="text-xl font-bold mb-2 group-hover:text-primary transition-colors">
              {post.metadata.title}
            </h3>
            <p className="text-sm text-gray-400 mb-2">
              {new Date(post.metadata.publishedAt).toLocaleDateString()}
            </p>
            {post.metadata.tag && (
              <span className="inline-block px-3 py-1 rounded-full text-xs border border-gray-600 text-white">
                {post.metadata.tag}
              </span>
            )}
          </Link>
        ))}
      </div>
    </div>
  );
} 